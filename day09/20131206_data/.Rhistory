psych_test <- c(13, 14, 7, 12, 10, 6, 8, 15 4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
xx <- c(1,1,1)
psych_test <- c(13,14,7,12,10,6,8,15,4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
psych_test <- c(13, 14, 7, 12, 10, 6, 8, 15, 4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
hist(psych_test)
sum(psych_test)
sum(psych_test)/length(psych_test)
mean(psych_test)
table(psych_test)
median(psych_test)
avg <- mean(psych_test)
avg
deviation <- psych_test - avg
deviation
sqr_deviation <- deviation ^ 2
sqr_deviation
sum_sqr_deviation <- sum(sqr_deviation)
sum_sqr_deviation
dispersion <- sum_sqr_deviation / length(psych_test)
dispersion
sqrt(dispersion)
var(psych_test)
sum_sqr_deviation / length(psych_test) - 1
sum_sqr_deviation / (length(psych_test) - 1)
sqrt(sum_sqr_deviation / (length(psych_test) - 1))
sd(psych_test)
source('~/Documents/studyR/study01.R', echo=TRUE)
psych_test
mean(psych_test)
psych_test - mean(psych_test)
abs(psych_test - mean(psych_test))
mean(abs(psych_test - mean(psych_test)))
psych_sd <- sqrt(mean((psych_test -  mean(psych_test)) ^ 2))
z-score <- (psych_test - mean(psych_test)) / psych_sd
z_score <- (psych_test - mean(psych_test)) / psych_sd
z_score
mean(z_score)
sqrt(mean((z_score - mean(z_score)) ^ 2))
A <- c(60, 100, 50, 40, 50, 230, 120, 240, 200, 30)
B <- c(50, 60, 40, 50, 100, 80, 30, 20, 100, 120)
hist(A)
hist(B)
mean(A)
sd(A)
mean(B)
sd(B)
z_A <- (A - mean(A)) / sd(A)
z_B <- (B - mean(B)) / sd(B)
z_A
z_B
sd(z_A)
sd(z_B)
hist(z_A)
hist(z_B)
stc_test1 <- c(6, 10, 6, 10, 5, 3, 5, 9, 3, 3, 11, 6, 11, 9, 7, 5, 8, 7, 7, 9)
stc_test2 <- c(10, 13, 8, 15, 8, 6, 9, 10, 7, 3, 18, 14, 18, 11, 12, 5, 7, 12, 7, 7)
plot(stc_test1, stc_test2)
plot(psych_test, stc_test1)
plot(psych_test, stc_test2)
cov(stc_test1, stc_test2)
cor(stc_test1, stc_test2)
cor(stc_test1, stc_test2)
cor(psych_test, stc_test1)
cor(psych_test, stc_test2)
stcs <- c("D", "D", "D", "L", "L", "D", "L", "L", "L", "L", "D", "L")
math <- c("L", "D", "D", "L", "L", "D", "D", "D", "L", "D", "L", "L")
table(math)
table(stcs)
table(math, stcs)
math10 <- ifelse(math=="L", 1, 0)
stcs10 <- ifelse(stcs=="L", 1, 0)
cor(math10, stcs10)
source('~/Documents/studyR/study01.R', echo=TRUE)
study_time <- c(1,3,10,12,6,3,8,4,1,5)
score <- c(20,40,100,80,50,50,70,50,10,60)
plot(study_time, score)
cor(study_time, score)
library(SPARQL)
install.packages("SPARQL")
library(SPARQL)
endpoint <- "http://ja.dbpedia.org/sparql"
query <- '
PFEFIX dbpja:<http://ja.dbpedia.org/property/>
PREFIX dcterms:<http://purl.org/terms/>
select
distinct ?movie ?director ?actor
where {
?m dcterms:subject <http://ja.dbpedia.org/resource/Category:日本の映画作品>
?m dbpja:監督 ?d .
?m dbpja:出演者 ?a .
?m rdfs:label ?movie .
?d rdfs:label ?director .
?a rdfs:label ?actor .
}
'
res <- SPARQL(endpoint, query)$results
query <- '
PREFIX dbpja:<http://ja.dbpedia.org/property/>
PREFIX dcterms:<http://purl.org/terms/>
select
distinct ?movie ?director ?actor
where {
?m dcterms:subject <http://ja.dbpedia.org/resource/Category:日本の映画作品>
?m dbpja:監督 ?d .
?m dbpja:出演者 ?a .
?m rdfs:label ?movie .
?d rdfs:label ?director .
?a rdfs:label ?actor .
}
'
res <- SPARQL(endpoint, query)$results
csv.re
csv.read("http://dyna.central-tanshifx.com/service/market/csv/01_USDJPY_D.csv")
csv.read("http://dyna.central-tanshifx.com/service/market/csv/01_USDJPY_D.csv")
read.csv("http://dyna.central-tanshifx.com/service/market/csv/01_USDJPY_D.csv")
setwd("~/dev/feg/day09/20131206_data")
tea <- read.csv(file = "tea.csv")
View(tea)
summary(tea)
plot(tea$temperature, tea$tea)
cor(tea$temperature, tea$tea)
lm01 <- lm(tea ~ temperature, data = tea)
summary(lm01)
plot(tea$temperature, tea$tea)
abline(lm01, lwd = 1, lty = 1, col = "red")
plot(lm01, which=1)
print(cbind(tea, hat(tea))[c(2,4,5), ])
plot(lm01, which=2)
print(cbind(tea, hat(tea))[c(2,5,8), ])
pred <- predict(lm01, interval="conf", level=0.95)
plot(tea$temperature, tea$tea, xlim=c(0,30), ylim=c(0,100))
plot(tea$temperature, tea$tea, xlim=c(0,30), ylim=c(0,100))
par(new=T)
plot(tea$temperature, pred[,1], type="l", col="red", xlim=(0,30), ylim=c(0,100), xlab="", ylab="")
plot(tea$temperature, pred[,1], type="l", col="red", xlim=c(0,30), ylim=c(0,100), xlab="", ylab="")
par(new=T)
plot(tea$temperature, pred[,2], type="p", col="blue", pch=3, xlim=c(0,30), ylim=c(0,100),xlab="",ylab="")
plot(tea$temperature, pred[,3], type="p", col="blue", pch=3, xlim=c(0,30), ylim=c(0,100),xlab="",ylab="")
test <- data.frame(temperate=10)
predict(lm01, newdata=test, interval="conf", level=0.95)
plot(tea$temperature, tea$tea, xlim=c(0,30), ylim=c(0,100))
par(new=T)
plot(tea$temperature, pred[,1], type="l", col="red", xlim=c(0,30), ylim=c(0,100), xlab="", ylab="")
par(new=T)
plot(tea$temperature, pred[,2], type="p", col="blue", pch=3, xlim=c(0,30), ylim=c(0,100),xlab="",ylab="")
par(new=T)
plot(tea$temperature, pred[,3], type="p", col="blue", pch=3, xlim=c(0,30), ylim=c(0,100),xlab="",ylab="")
test <- data.frame(temperate=10)
predict(lm01, newdata=test, interval="conf", level=0.95)
test <- data.frame(temperature=10)
predict(lm01, newdata=test, interval="conf", level=0.95)
?cars
data(cars)
lmCar <- lm(dist ~ speed, data = cars)
test2 <- data.frame(speed = 2)
predict(lmCar, newdata=test2, interval="conf", level=0.95)
test154 <- data.frame(speed = 15.4)
predict(lmCar, newdata=test154, interval="conf", level=0.95)
test30 <- data.frame(speed = 30)
predict(lmCar, newdata=test30, interval="conf", level=0.95)
test50 <- data.frame(speed = 50)
predict(lmCar, newdata=test50, interval="conf", level=0.95)
testCar <- data.frame(speed = c(2, 15.4, 30, 50))
res <-
as.data.frame(
predict(lmCar, newdata=testCar, interval="conf", level=0.95)
)
res$dif <- res$upr - res$lwr
res
a01 <- read.csv("Anscomv.csv")
a01 <- read.csv("Anscombe.csv")
mean(a01$x1)
mean(a01$x2)
mean(a01$x3)
mean(a01$x4)
mean(a01$y1)
mean(a01$y2)
mean(a01$y3)
mean(a01$y4)
cor(a01$x1, a01$y1)
cor(a01$x2, a01$y2)
cor(a01$x3, a01$y3)
cor(a01$x4, a01$y4)
lmA01 <- lm(a01$y1 ~ a01$x1, data=a01)
lmA02 <- lm(a01$y2 ~ a01$x2, data=a01)
lmA03 <- lm(a01$y3 ~ a01$x3, data=a01)
lmA04 <- lm(a01$y4 ~ a01$x4, data=a01)
lmA01$coefficients
lmA02$coefficients
lmA03$coefficients
lmA04$coefficients
par(mfrow=c(2,2))
plot(a01$x1, a01$y01)
abline(lmA01, lwd=1, lty=1, col="red")
par(mfrow=c(2,2))
plot(a01$x1, a01$y1)
abline(lmA01, lwd=1, lty=1, col="red")
plot(a01$x2, a01$y2)
abline(lmA02, lwd=1, lty=1, col="red")
plot(a01$x3, a01$y3)
abline(lmA03, lwd=1, lty=1, col="red")
plot(a01$x4, a01$y4)
abline(lmA04, lwd=1, lty=1, col="red")
print(a01[, c("x3","y3")])
a01[3, c("x3", "y3")]
#はずれ値を除く
b01 <- a01[-3,]
b01
lmB03 <- lm(b01$y3 ~ b01$x3, data=b01)
summary(lmB03)
lmB03$coefficients
plot(a01$x3, a01$y3, ylim=c(5,13))
abline(lmA03, lwd=1, lty=1, col="blue")
abline(lmB03, lwd=1, lty=1, col="red")
plot(a01$x3, a01$y3, ylim=c(5,13))
abline(lmA03, lwd=1, lty=1, col="blue")
abline(lmB03, lwd=1, lty=1, col="red")
library(car)
install.packages("car")
library(car)
?Duncan
data(Duncan)
str(Duncan)
head(Duncan)
summaru(Duncan)
summary(Duncan)
plot(Duncan$income, Duncan$education)
plot(Duncan$income, Duncan$prestige)
cor(Duncan$income, Duncan$education)
cor(Duncan$income, Duncan$prestige)
cor(Duncan[, -1])
aggregate(Duncan$income, list(Duncan$type), summary)
boxplot(Duncan$income)
boxplot(Duncan$income ~ Duncan$type)
