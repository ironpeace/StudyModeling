psych_test <- c(13, 14, 7, 12, 10, 6, 8, 15 4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
xx <- c(1,1,1)
psych_test <- c(13,14,7,12,10,6,8,15,4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
psych_test <- c(13, 14, 7, 12, 10, 6, 8, 15, 4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
hist(psych_test)
sum(psych_test)
sum(psych_test)/length(psych_test)
mean(psych_test)
table(psych_test)
median(psych_test)
avg <- mean(psych_test)
avg
deviation <- psych_test - avg
deviation
sqr_deviation <- deviation ^ 2
sqr_deviation
sum_sqr_deviation <- sum(sqr_deviation)
sum_sqr_deviation
dispersion <- sum_sqr_deviation / length(psych_test)
dispersion
sqrt(dispersion)
var(psych_test)
sum_sqr_deviation / length(psych_test) - 1
sum_sqr_deviation / (length(psych_test) - 1)
sqrt(sum_sqr_deviation / (length(psych_test) - 1))
sd(psych_test)
source('~/Documents/studyR/study01.R', echo=TRUE)
psych_test
mean(psych_test)
psych_test - mean(psych_test)
abs(psych_test - mean(psych_test))
mean(abs(psych_test - mean(psych_test)))
psych_sd <- sqrt(mean((psych_test -  mean(psych_test)) ^ 2))
z-score <- (psych_test - mean(psych_test)) / psych_sd
z_score <- (psych_test - mean(psych_test)) / psych_sd
z_score
mean(z_score)
sqrt(mean((z_score - mean(z_score)) ^ 2))
A <- c(60, 100, 50, 40, 50, 230, 120, 240, 200, 30)
B <- c(50, 60, 40, 50, 100, 80, 30, 20, 100, 120)
hist(A)
hist(B)
mean(A)
sd(A)
mean(B)
sd(B)
z_A <- (A - mean(A)) / sd(A)
z_B <- (B - mean(B)) / sd(B)
z_A
z_B
sd(z_A)
sd(z_B)
hist(z_A)
hist(z_B)
stc_test1 <- c(6, 10, 6, 10, 5, 3, 5, 9, 3, 3, 11, 6, 11, 9, 7, 5, 8, 7, 7, 9)
stc_test2 <- c(10, 13, 8, 15, 8, 6, 9, 10, 7, 3, 18, 14, 18, 11, 12, 5, 7, 12, 7, 7)
plot(stc_test1, stc_test2)
plot(psych_test, stc_test1)
plot(psych_test, stc_test2)
cov(stc_test1, stc_test2)
cor(stc_test1, stc_test2)
cor(stc_test1, stc_test2)
cor(psych_test, stc_test1)
cor(psych_test, stc_test2)
stcs <- c("D", "D", "D", "L", "L", "D", "L", "L", "L", "L", "D", "L")
math <- c("L", "D", "D", "L", "L", "D", "D", "D", "L", "D", "L", "L")
table(math)
table(stcs)
table(math, stcs)
math10 <- ifelse(math=="L", 1, 0)
stcs10 <- ifelse(stcs=="L", 1, 0)
cor(math10, stcs10)
source('~/Documents/studyR/study01.R', echo=TRUE)
study_time <- c(1,3,10,12,6,3,8,4,1,5)
score <- c(20,40,100,80,50,50,70,50,10,60)
plot(study_time, score)
cor(study_time, score)
library(SPARQL)
install.packages("SPARQL")
library(SPARQL)
endpoint <- "http://ja.dbpedia.org/sparql"
query <- '
PFEFIX dbpja:<http://ja.dbpedia.org/property/>
PREFIX dcterms:<http://purl.org/terms/>
select
distinct ?movie ?director ?actor
where {
?m dcterms:subject <http://ja.dbpedia.org/resource/Category:日本の映画作品>
?m dbpja:監督 ?d .
?m dbpja:出演者 ?a .
?m rdfs:label ?movie .
?d rdfs:label ?director .
?a rdfs:label ?actor .
}
'
res <- SPARQL(endpoint, query)$results
query <- '
PREFIX dbpja:<http://ja.dbpedia.org/property/>
PREFIX dcterms:<http://purl.org/terms/>
select
distinct ?movie ?director ?actor
where {
?m dcterms:subject <http://ja.dbpedia.org/resource/Category:日本の映画作品>
?m dbpja:監督 ?d .
?m dbpja:出演者 ?a .
?m rdfs:label ?movie .
?d rdfs:label ?director .
?a rdfs:label ?actor .
}
'
res <- SPARQL(endpoint, query)$results
csv.re
csv.read("http://dyna.central-tanshifx.com/service/market/csv/01_USDJPY_D.csv")
csv.read("http://dyna.central-tanshifx.com/service/market/csv/01_USDJPY_D.csv")
read.csv("http://dyna.central-tanshifx.com/service/market/csv/01_USDJPY_D.csv")
setwd("~/dev/feg/day08")
?cars
?cars
data(cars)
View(cars)
str(cars)
summary(cars)
plot(cars$speed, cars$dist)
cor(cars$speed, cars$dist)
lm01 <- lm(dist ~ spedd, data = cars)
lm01 <- lm(dist ~ speed, data = cars)
summary(lm01)
plot(cars$speed, cars$dist)
abline(lm01, lwd = 1, lty = 1, col = "red")
lm01$residuals
summary(lm01$residuals)
par(mfrow=c(2,2))
plot(lm01)
plot(lm01, which=1)
pred <- predict(lm01)
resid <- lm01$residuals
print(cars[c(23,35,49)])
print(cars[c(23,35,49), ])
subset(cars2, speed==14)
cars2 <- cbind(cars, pred, resid)
print(cars[c(23,35,49), ])
subset(cars2, speed==14)
plot(lm01, which=2)
hat(cars)
cars3 <- cbind(cars2, hat(cars))
summary(cars3)
print(cars3[c(23, 35, 49), ])
subset(cars3, speed==14)
fix(lm01)
fix(lm01)
lm01$coefficients
Sxx <- sum((cars$speed - mean(cars$speed))^2)
xx <- cars$speed - mean(cars$speed)
Sxy <- sum(xx * xy)
xy <- cars$dist - mean(cars$dist)
Sxy <- sum(xx * xy)
beta <- Sxy / Sxx
alpha <- mean(cars$dist) - beta * mean(cars$speed)
((sum((cars$dist - lm01$fitted.values) ** 2) / (nrow(cars) - 2)) ** 0.5) / (Sxx ** 0.5 )
beta / (((sum((cars$dist - lm01$fitted.values) ** 2) / (nrow(cars) - 2)) ** 0.5) / (Sxx ** 0.5))
x <- seq(-10,10,0,01)
x <- seq(-10,10,0.01)
plot(xm, dt(x, df=48), type="1", ylab="density")
plot(x, dt(x, df=48), type="1", ylab="density")
kakigori <- read.csv("ice.csv")
View(kakigori)
str(kakigori)
data(kakigori)
summary(kakigori)
plot(kakigori$temperature, kakigori$ice)
par(mfrow=c(1,1))
plot(kakigori$temperature, kakigori$ice)
cor(kakigori$temperature, kakigori$ice)
lmIce <- lm(ice ~ temperature, data = kakigori)
summary(lmIce)
plot(kakigori$temperature, kakigori$ice)
abline(lmIce, #線形回帰モデル
lwd = 1, #線の太さの指定（小さいほど細い）
lty = 1, #線のタイプの指定（実線）
col = "red" #線の色
)
plot(lmIce, which = 1)
plot(lmIce, which = 2)
read.csv("jma.csv")
read.csv("tepco.csv")
jma <- read.csv("jma.csv")
tepco <- read.csv("tepco.csv")
head(jma)
head(tepco)
denki <- cbind(jma$avgtmp, tepco$sum)
head(denki)
lm([,2] ~ [,1], data=denki)
lm(sum ~ avgtmp, data=denki)
denki <- data.frame(tmp=jma$avgtmp, denki=tepco$sum)
head(denki)
lm(denki~tmp, data=denki)
lmDenki <- lm(denki~tmp, data=denki)
plot(denki$tmp, denki$denki)
abline(lmDenki, #線形回帰モデル
lwd = 1, #線の太さの指定（小さいほど細い）
lty = 1, #線のタイプの指定（実線）
col = "red" #線の色
)
denki <- data.frame(tmp=abs(jma$avgtmp - mean(jma$avgtmp)), denki=tepco$sum)
head(denki)
lmDenki <- lm(denki~tmp, data=denki)
plot(denki$tmp, denki$denki)
abline(lmDenki, #線形回帰モデル
lwd = 1, #線の太さの指定（小さいほど細い）
lty = 1, #線のタイプの指定（実線）
col = "red" #線の色
)
plot(lmDenki, which=1)
plot(lmDenki, which=2)
