psych_test <- c(13, 14, 7, 12, 10, 6, 8, 15 4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
xx <- c(1,1,1)
psych_test <- c(13,14,7,12,10,6,8,15,4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
psych_test <- c(13, 14, 7, 12, 10, 6, 8, 15, 4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
hist(psych_test)
sum(psych_test)
sum(psych_test)/length(psych_test)
mean(psych_test)
table(psych_test)
median(psych_test)
avg <- mean(psych_test)
avg
deviation <- psych_test - avg
deviation
sqr_deviation <- deviation ^ 2
sqr_deviation
sum_sqr_deviation <- sum(sqr_deviation)
sum_sqr_deviation
dispersion <- sum_sqr_deviation / length(psych_test)
dispersion
sqrt(dispersion)
var(psych_test)
sum_sqr_deviation / length(psych_test) - 1
sum_sqr_deviation / (length(psych_test) - 1)
sqrt(sum_sqr_deviation / (length(psych_test) - 1))
sd(psych_test)
source('~/Documents/studyR/study01.R', echo=TRUE)
psych_test
mean(psych_test)
psych_test - mean(psych_test)
abs(psych_test - mean(psych_test))
mean(abs(psych_test - mean(psych_test)))
psych_sd <- sqrt(mean((psych_test -  mean(psych_test)) ^ 2))
z-score <- (psych_test - mean(psych_test)) / psych_sd
z_score <- (psych_test - mean(psych_test)) / psych_sd
z_score
mean(z_score)
sqrt(mean((z_score - mean(z_score)) ^ 2))
A <- c(60, 100, 50, 40, 50, 230, 120, 240, 200, 30)
B <- c(50, 60, 40, 50, 100, 80, 30, 20, 100, 120)
hist(A)
hist(B)
mean(A)
sd(A)
mean(B)
sd(B)
z_A <- (A - mean(A)) / sd(A)
z_B <- (B - mean(B)) / sd(B)
z_A
z_B
sd(z_A)
sd(z_B)
hist(z_A)
hist(z_B)
stc_test1 <- c(6, 10, 6, 10, 5, 3, 5, 9, 3, 3, 11, 6, 11, 9, 7, 5, 8, 7, 7, 9)
stc_test2 <- c(10, 13, 8, 15, 8, 6, 9, 10, 7, 3, 18, 14, 18, 11, 12, 5, 7, 12, 7, 7)
plot(stc_test1, stc_test2)
plot(psych_test, stc_test1)
plot(psych_test, stc_test2)
cov(stc_test1, stc_test2)
cor(stc_test1, stc_test2)
cor(stc_test1, stc_test2)
cor(psych_test, stc_test1)
cor(psych_test, stc_test2)
stcs <- c("D", "D", "D", "L", "L", "D", "L", "L", "L", "L", "D", "L")
math <- c("L", "D", "D", "L", "L", "D", "D", "D", "L", "D", "L", "L")
table(math)
table(stcs)
table(math, stcs)
math10 <- ifelse(math=="L", 1, 0)
stcs10 <- ifelse(stcs=="L", 1, 0)
cor(math10, stcs10)
source('~/Documents/studyR/study01.R', echo=TRUE)
study_time <- c(1,3,10,12,6,3,8,4,1,5)
score <- c(20,40,100,80,50,50,70,50,10,60)
plot(study_time, score)
cor(study_time, score)
library(SPARQL)
install.packages("SPARQL")
library(SPARQL)
endpoint <- "http://ja.dbpedia.org/sparql"
query <- '
PFEFIX dbpja:<http://ja.dbpedia.org/property/>
PREFIX dcterms:<http://purl.org/terms/>
select
distinct ?movie ?director ?actor
where {
?m dcterms:subject <http://ja.dbpedia.org/resource/Category:日本の映画作品>
?m dbpja:監督 ?d .
?m dbpja:出演者 ?a .
?m rdfs:label ?movie .
?d rdfs:label ?director .
?a rdfs:label ?actor .
}
'
res <- SPARQL(endpoint, query)$results
query <- '
PREFIX dbpja:<http://ja.dbpedia.org/property/>
PREFIX dcterms:<http://purl.org/terms/>
select
distinct ?movie ?director ?actor
where {
?m dcterms:subject <http://ja.dbpedia.org/resource/Category:日本の映画作品>
?m dbpja:監督 ?d .
?m dbpja:出演者 ?a .
?m rdfs:label ?movie .
?d rdfs:label ?director .
?a rdfs:label ?actor .
}
'
res <- SPARQL(endpoint, query)$results
csv.re
csv.read("http://dyna.central-tanshifx.com/service/market/csv/01_USDJPY_D.csv")
csv.read("http://dyna.central-tanshifx.com/service/market/csv/01_USDJPY_D.csv")
read.csv("http://dyna.central-tanshifx.com/service/market/csv/01_USDJPY_D.csv")
setwd("~/dev/feg/day15")
x <- seq(-5, 5, by=0.1)   #X軸の設定
p <- -1 / (1 + exp(-x))   #ロジスティック関数
plot(x, p)                #図示
summary(p)                #pの分布の確認
x <- seq(-5, 5, by=0.1)   #X軸の設定（-5から5まで0.1刻み）
p <- 1 / (1 + exp(-x))   #ロジスティック関数
plot(x, p)                #図示
summary(p)                #pの分布の確認
plot(x, 1/(1 + exp(-(0 + 0 * X))), ylab="p", ylim=c(0,1), xlim=c(-5, 5))
par(new = T)
plot(x, 1/(1 + exp(-(0 + 1 * X))), ylab="p", ylim=c(0,1), xlim=c(-5, 5))
par(new = T)
plot(x, 1/(1 + exp(-(0 + 2 * X))), ylab="p", ylim=c(0,1), xlim=c(-5, 5))
plot(x, 1/(1 + exp(-(0 + 0 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5))
par(new = T)
plot(x, 1/(1 + exp(-(0 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5))
par(new = T)
plot(x, 1/(1 + exp(-(0 + 2 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5))
plot(x, 1/(1 + exp(-(0 + 0 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col='red') # フラットになる
par(new = T)
plot(x, 1/(1 + exp(-(0 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="blue")
par(new = T)
plot(x, 1/(1 + exp(-(0 + 2 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="green")
par(new = T)
plot(x, 1/(1 + exp(-(0 + 5 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="yellow")
plot(x, 1/(1 + exp(-(-1 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="blue")
par(new = T)
plot(x, 1/(1 + exp(-(0 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="green")
par(new = T)
plot(x, 1/(1 + exp(-(1 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="red")
par(new = T)
plot(x, 1/(1 + exp(-(-5 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="blue")
par(new = T)
plot(x, 1/(1 + exp(-(0 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="green")
par(new = T)
plot(x, 1/(1 + exp(-(5 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="red")
par(new = T)
plot(x, 1/(1 + exp(-(-5 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="blue")
par(new = T)
plot(x, 1/(1 + exp(-(0 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="green")
par(new = T)
plot(x, 1/(1 + exp(-(5 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="red")
par(new = T)
plot(x, 1/(1 + exp(-(5 + 1 * x))), ylab="p", ylim=c(0,1), xlim=c(-5, 5), col="red")
iris2 <- iris[1:100, c(1,5)] #必要なデータだけ抜粋
iris2 <- iris[1:100, c(1,5)] #必要なデータだけ抜粋
iris2$target <- ifelse(iris2$Species == "versicolor", 1, 0) #Speciesを0/1に変換
lm(target ~ Spepal.length, data=iris2) #線形回帰モデルの推定
lm(target ~ Spepal.Length, data=iris2) #線形回帰モデルの推定
lm(target ~ Sepal.Length, data=iris2) #線形回帰モデルの推定
plot(iris2$Sepal.Length, iris2$target)
iris.lm <- lm(target ~ Sepal.Length, data=iris2) #線形回帰モデルの推定
abline(iris.lm, lwd=1, lty=1, col="red")
-2.6203 + 0.5703 * 6.5
logit01 <- glm(target ~ Sepal.Length, data=iris2, family="biomial")
logit01 <- glm(target ~ Sepal.Length, data=iris2, family="binomial")
1 / (1 + exp(- (-27.831 + 5.140 * iris2$Sepal.Length)))
plot(iris2$Sepal.Length, iris2$target, xlim=c(4,7), ylim=C(0,1), ylab="Probability", xlab="Sepal.Length")
plot(iris2$Sepal.Length, iris2$target, xlim=c(4,7), ylim=c(0,1), ylab="Probability", xlab="Sepal.Length")
par(new=T)
curve(1 / (1 + exp(-(-27.831 + 5.140 * x))), col="blue", xlim=c(4,7), ylim=c(0,1), lwd=2, lty=3, ylab="Probability", xlab="Sepal.Length")
